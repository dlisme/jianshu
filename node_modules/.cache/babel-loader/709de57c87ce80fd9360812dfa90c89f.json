{"ast":null,"code":"import * as actionTypes from './constants';\nimport { fromJS } from 'immutable'; // immutable.js第三方模块，生成immutable对象，不可改变的对象\n// fromJS可以将js对象转换为immutable对象。\n\nconst defaultState = fromJS({\n  focused: false,\n  list: []\n}); // export default (state = defaultState, action) => {\n//     if(action.type === actionTypes.SEARCH_FOCUS){\n//         // immutable对象的set方法，会结合之前的immutable对象的值\n//         // 和设置的值，返回一个全新的对象\n//         return state.set('focused', true);\n//     }\n//         // return {\n//         //     focused: true\n//         // }\n//     if(action.type === actionTypes.SEARCH_BLUR){\n//         return state.set('focused', false);\n//     }\n//     if(action.type === actionTypes.CHANGE_LIST){\n//         return state.set('list', action.data);\n//     }\n//     return state\n// }\n\nexport default ((state = defaultState, action) => {\n  switch (action.type) {\n    case 'actionTypes.SEARCH_FOCUS':\n      return state.set('focused', true);\n\n    case 'actionTypes.SEARCH_BLUR':\n      return state.set('focused', false);\n\n    case 'actionTypes.CHANGE_LIST':\n      return state.set('list', action.data);\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/Users/dl/Documents/jianshu/src/common/header/store/reducer.js"],"names":["actionTypes","fromJS","defaultState","focused","list","state","action","type","set","data"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,aAA7B;AACA,SAASC,MAAT,QAAuB,WAAvB,C,CAEA;AACA;;AACA,MAAMC,YAAY,GAAGD,MAAM,CAAC;AACxBE,EAAAA,OAAO,EAAE,KADe;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAAD,CAA3B,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,0BAAL;AACE,aAAOF,KAAK,CAACG,GAAN,CAAU,SAAV,EAAqB,IAArB,CAAP;;AACF,SAAK,yBAAL;AACE,aAAOH,KAAK,CAACG,GAAN,CAAU,SAAV,EAAqB,KAArB,CAAP;;AACF,SAAK,yBAAL;AACE,aAAOH,KAAK,CAACG,GAAN,CAAU,MAAV,EAAkBF,MAAM,CAACG,IAAzB,CAAP;AANN;;AAQA,SAAOJ,KAAP;AACH,CAVD","sourcesContent":["import * as actionTypes from './constants';\nimport { fromJS } from 'immutable';\n\n// immutable.js第三方模块，生成immutable对象，不可改变的对象\n// fromJS可以将js对象转换为immutable对象。\nconst defaultState = fromJS({\n    focused: false,\n    list: []\n});\n\n// export default (state = defaultState, action) => {\n//     if(action.type === actionTypes.SEARCH_FOCUS){\n//         // immutable对象的set方法，会结合之前的immutable对象的值\n//         // 和设置的值，返回一个全新的对象\n//         return state.set('focused', true);\n//     }\n//         // return {\n//         //     focused: true\n//         // }\n//     if(action.type === actionTypes.SEARCH_BLUR){\n//         return state.set('focused', false);\n//     }\n//     if(action.type === actionTypes.CHANGE_LIST){\n//         return state.set('list', action.data);\n//     }\n//     return state\n// }\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case 'actionTypes.SEARCH_FOCUS' : \n          return state.set('focused', true);\n        case 'actionTypes.SEARCH_BLUR' :\n          return state.set('focused', false);\n        case 'actionTypes.CHANGE_LIST' : \n          return state.set('list', action.data);\n    }\n    return state\n}"]},"metadata":{},"sourceType":"module"}